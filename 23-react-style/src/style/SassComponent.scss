/*
    1. 기본
    - nesting
    - 자기자신을 선택&
    - 변수 사용

*/
@import "utils";

.div1 {
  width: 100px;
  height: 100px;
  background-color: $color-red;
  .div2 {
    width: 50%;
    height: 50%;
    background-color: $color-orange;
    box-shadow: inset $boxShadow;
    .div3 {
      width: 50%;
      height: 50%;
      background-color: $color-yellow;
      box-shadow: $boxShadow;
    }
  }
  .btn {
    display: inline-block;
    transition: 0.4s;
    width: 33%;
    font-size: 8px;
    height: 40px;
    padding: 0;

    &.orangered {
      background-color: $color-orange;
    }
    // .btn--opacity
    &--opacity {
      background-color: $color-bule;
      opacity: 0.5;
      &:hover {
        opacity: 0.2;
      }
    }
    &--blue {
      background-color: $color-bule;
    }
  }
}

.container {
  width: 100%;
  background-color: gainsboro;
  margin-bottom: 0px;
  .box1 {
    @include box;
    // &:nth-child(1) {
    //   width: 100px;
    // }
    // &:nth-child(2) {
    //   width: 120px;
    // }
    // &:nth-child(3) {
    //   width: 140px;
    // }
    @for $i from 1 through 3 {
      &:nth-child(#{$i}) {
        width: 80px +20px * $i;
      }
    }
  }
  .circle {
    // @include circle($color-red, 0.8);
    $circleBgColors: ($color-orange, $color-yellow, $color-green);
    // &:nth-of-type(1) {
    //   @include circle($color-red, 0.8);
    // }
    // &:nth-of-type(2) {
    // }
    // &:nth-of-type(3) {
    // }

    @each $el in $circleBgColors {
      // index($리스트, $리스트의value)
      // 반환값 리스트의 value에 대한 index:1,2,3,...
      $index: index($circleBgColors, $el);
      &:nth-of-type(#{$index}) {
        @include circle($el, 0.8);
      }
    }
  }
  .box2 {
    @include box2();
    &:nth-of-type(4) {
      @include box2($color-yellow, 20px, navy);
    }
    &:nth-of-type(5) {
      @include box2(orangered, 30px, black);
    }
  }
}

// 이미지에 접근하기

.img-test {
  width: 100px;
  height: 100px;
  border: 1px solid blue;
  &.src-img {
    // background-image 속성은 상대경로 사용
    background-image: url("../assets/green.png");
    // background-image: url("/assets/green.png");
  }
  &.public-img {
    //상대경로가 아닌 public은 /로부터 접근
    background-image: url("http://localhost:3000/assets/green.png");
  }
}

.practice {
  display: flex;
  justify-content: space-evenly;
  div {
    width: 100px;
    height: 150px;
    border-radius: 10%;
    background-color: $color-bule;
    margin: 10px;
    box-shadow: $boxShadow;
    cursor: pointer;

    @for $i from 1 through 4 {
      &:nth-child(#{$i}) {
        background-image: url("../assets/practice#{$i}.png");
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
      }
    }
  }
  //   &:nth-child(1) {
  //     background-image: url("../assets/practice1.png");
  //   }
  //   &:nth-child(2) {
  //     background-image: url("../assets/practice2.png");
  //   }
  //   &:nth-child(3) {
  //   }
  //   &:nth-child(4) {
  //   }
}
// .pBox {
//   width: 200px;
//   height: 450px;
//   border-radius: 10px;
//   background-color: $color-bule;
//   display: inline-block;
//   background-size: contain;
//   background-repeat: no-repeat;

//   &.p1 {
//     background-image: url(../assets/practice1.png);
//   }
//   &.p2 {
//     background-image: url(../assets/practice2.png);
//   }
//   &.p3 {
//     background-image: url(../assets/practice3.png);
//   }
//   &.p4 {
//     background-image: url(../assets/practice4.png);
//   }
// }

.larva {
  position: relative;
}
.larva .body {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  position: absolute;
}
.larva .body.body1 {
  top: 100px;
  left: 100px;
  background-color: rgb(0, 0, 166);
}
.larva .body.body2 {
  top: 150px;
  left: 160px;
  background-color: rgb(36, 61, 206);
}
.larva .body.body3 {
  top: 190px;
  left: 200px;
  background-color: rgb(52, 118, 231);
}
.larva .body.body4 {
  top: 240px;
  left: 220px;
  background-color: rgb(47, 146, 233);
}
.larva .body.body5 {
  top: 280px;
  left: 280px;
  background-color: rgb(140, 191, 253);
  z-index: 10;
}
.larva .grass {
  position: absolute;
  top: 260px;
  left: 0;
}

.pContainer {
  div {
    position: relative;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    animation-duration: 3s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-delay: 0s;
    &:nth-child(1) {
      background-color: $color-bule;
      animation-name: move1;
    }
    &:nth-child(2) {
      background-color: $color-green;
      animation-name: move2;
    }
    &:nth-child(3) {
      background-color: $color-orange;
      animation-name: move3;
    }
  }
}
@keyframes move1 {
  0% {
    left: 0px;
  }
  25% {
    left: 10px;
  }
  50% {
    left: 10px;
    top: 10px;
  }
  75% {
    top: 10px;
  }
  100% {
    left: 0px;
  }
}
@keyframes move2 {
  0% {
    left: 0px;
  }
  25% {
    left: 20px;
  }
  50% {
    left: 20px;
    top: 20px;
  }
  75% {
    top: 20px;
  }
  100% {
    left: 0px;
  }
}
@keyframes move3 {
  0% {
    left: 0px;
  }
  25% {
    left: 30px;
  }
  50% {
    left: 30px;
    top: 30px;
  }
  75% {
    top: 30px;
  }
  100% {
    left: 0px;
  }
}
